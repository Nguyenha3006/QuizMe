"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from "recharts"
import { Compass, Zap, BookOpen, Target, Lightbulb, Wand2, Clock } from "lucide-react"

export default function Dashboard() {
  const [selectedModule, setSelectedModule] = useState<string | null>(null)

  const competencyData = [
    { subject: "H√†m s·ªë & ƒê·ªì th·ªã", value: 85 },
    { subject: "M≈© & Logarit", value: 72 },
    { subject: "Nguy√™n h√†m & T√≠ch ph√¢n", value: 78 },
    { subject: "S·ªë ph·ª©c", value: 65 },
    { subject: "H√¨nh h·ªçc kh√¥ng gian", value: 88 },
    { subject: "H√¨nh h·ªçc Oxyz", value: 70 },
  ]

  const microLearningModules = [
    {
      id: "challenge",
      title: "Th·ª≠ th√°ch H√¥m nay",
      description: "B√†i t·∫≠p ƒë∆∞·ª£c AI g·ª£i √Ω ri√™ng cho b·∫°n",
      icon: Zap,
      color: "from-orange-500 to-red-500",
      isPrimary: true,
      duration: "5-10 ph√∫t",
    },
    {
      id: "sprint",
      title: "Sprint 15 ph√∫t",
      description: "Luy·ªán t·∫≠p nhanh g·ªçn, nh·∫π nh√†ng",
      icon: Clock,
      color: "from-blue-500 to-cyan-500",
      isPrimary: true,
      duration: "15 ph√∫t",
    },
    {
      id: "formula",
      title: "C·ªßng c·ªë C√¥ng th·ª©c",
      description: "√în t·∫≠p c√¥ng th·ª©c s·∫Øp qu√™n (AI Memory Twin)",
      icon: Lightbulb,
      color: "from-purple-500 to-pink-500",
      isPrimary: false,
    },
    {
      id: "practice",
      title: "Luy·ªán t·∫≠p D·∫°ng b√†i",
      description: "Gi·∫£i quy·∫øt c√°c b√†i t·∫≠p theo d·∫°ng",
      icon: BookOpen,
      color: "from-green-500 to-emerald-500",
      isPrimary: false,
    },
  ]

  const macroLearningModules = [
    {
      id: "roadmap",
      title: "L·ªô tr√¨nh",
      description: "H√†nh tr√¨nh game RPG v·ªõi c√°c Ch·∫∑ng (milestones)",
      icon: Compass,
      color: "from-indigo-500 to-blue-500",
      action: "Xem L·ªô tr√¨nh",
    },
    {
      id: "exam",
      title: "L√†m b√†i thi",
      description: "Kho v≈© kh√≠ chi·∫øn l∆∞·ª£c v·ªõi b·ªô l·ªçc",
      icon: Target,
      color: "from-red-500 to-orange-500",
      action: "V√†o Ph√≤ng thi",
    },
  ]

  return (
    <div className="max-w-7xl mx-auto px-6 py-8">
      <div className="mb-8 flex items-start justify-between">
        <div>
          <h2 className="text-4xl font-bold mb-2">Ch√†o Minh Anh üëã</h2>
          <p className="text-slate-400 text-lg">
            M·ª•c ti√™u 9+ To√°n ch·ªâ c√≤n <span className="text-cyan-400 font-semibold">234 ng√†y</span> n·ªØa. H√¥m nay ch√∫ng ta
            s·∫Ω t·∫≠p trung v√†o chuy√™n ƒë·ªÅ n√†o?
          </p>
        </div>
        <div className="bg-gradient-to-br from-orange-500/20 to-red-500/20 border border-orange-500/30 rounded-lg p-4 text-center">
          <div className="text-4xl mb-2">üî•</div>
          <div className="text-2xl font-bold text-orange-400">15</div>
          <div className="text-sm text-slate-400">Ng√†y li√™n ti·∫øp</div>
        </div>
      </div>

      <Card className="mb-8 border-slate-700 bg-gradient-to-br from-slate-800 to-slate-900 overflow-hidden relative">
        <div className="absolute inset-0 opacity-10">
          <svg className="w-full h-full" viewBox="0 0 400 200">
            <path d="M 50 100 Q 150 50 250 100 T 450 100" stroke="currentColor" fill="none" strokeWidth="2" />
            <circle cx="100" cy="80" r="3" fill="currentColor" />
            <circle cx="200" cy="120" r="3" fill="currentColor" />
            <circle cx="300" cy="90" r="3" fill="currentColor" />
          </svg>
        </div>
        <CardHeader className="relative z-10">
          <div className="flex items-start justify-between">
            <div>
              <CardTitle className="text-2xl mb-2">üéØ AI Teacher G·ª£i √Ω: Chinh ph·ª•c Logarit ch·ª©a tham s·ªë m</CardTitle>
              <CardDescription className="text-slate-300">
                Ph√¢n t√≠ch 3 b√†i thi g·∫ßn nh·∫•t cho th·∫•y b·∫°n ƒë√£ n·∫Øm v·ªØng c∆° b·∫£n nh∆∞ng c√≤n l√∫ng t√∫ng ·ªü d·∫°ng b√†i n√†y. D√†nh 5
                ph√∫t ƒë·ªÉ √¥n t·∫≠p ngay!
              </CardDescription>
            </div>
          </div>
        </CardHeader>
        <CardContent className="relative z-10">
          <div className="flex flex-wrap gap-2 mb-6">
            <Badge variant="secondary" className="bg-blue-500/20 text-blue-300 border-blue-500/30">
              üéØ M·ª•c ti√™u: 8.5+
            </Badge>
            <Badge variant="secondary" className="bg-purple-500/20 text-purple-300 border-purple-500/30">
              üß© D·∫°ng b√†i: V·∫≠n d·ª•ng cao
            </Badge>
            <Badge variant="secondary" className="bg-cyan-500/20 text-cyan-300 border-cyan-500/30">
              üìö Chuy√™n ƒë·ªÅ: M≈© & Logarit
            </Badge>
          </div>
          <Button className="bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white border-0">
            <Compass className="w-4 h-4 mr-2" />
            B·∫ÆT ƒê·∫¶U GI·∫¢I M√É
          </Button>
        </CardContent>
      </Card>

      <div className="mb-8">
        <h3 className="text-2xl font-bold mb-6 flex items-center gap-2">
          <Zap className="w-6 h-6 text-orange-400" />
          T·ªëc ƒë·ªô Vi m√¥: G√¢y Nghi·ªán H√†ng Ng√†y
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          {microLearningModules.map((module) => {
            const Icon = module.icon
            return (
              <Card
                key={module.id}
                className={`border-slate-700 hover:bg-slate-800 cursor-pointer transition-all hover:border-slate-600 group ${
                  module.isPrimary ? "bg-slate-800/80 border-2 border-cyan-500/50" : "bg-slate-800/50"
                }`}
                onClick={() => setSelectedModule(module.id)}
              >
                <CardHeader>
                  <div
                    className={`w-12 h-12 rounded-lg bg-gradient-to-br ${module.color} flex items-center justify-center mb-3 group-hover:scale-110 transition-transform`}
                  >
                    <Icon className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-lg">{module.title}</CardTitle>
                  <CardDescription>{module.description}</CardDescription>
                  {module.duration && <div className="text-xs text-cyan-400 mt-2">‚è±Ô∏è {module.duration}</div>}
                </CardHeader>
                <CardContent>
                  <Button variant="ghost" className="w-full text-cyan-400 hover:text-cyan-300 hover:bg-slate-700/50">
                    Kh√°m ph√° ‚Üí
                  </Button>
                </CardContent>
              </Card>
            )
          })}
        </div>
      </div>

      <div className="mb-8">
        <h3 className="text-2xl font-bold mb-6 flex items-center gap-2">
          <Target className="w-6 h-6 text-blue-400" />
          T·ªëc ƒë·ªô Vƒ© m√¥: Chinh Ph·ª•c M·ª•c Ti√™u L·ªõn
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {macroLearningModules.map((module) => {
            const Icon = module.icon
            return (
              <Card
                key={module.id}
                className="border-slate-700 bg-slate-800/50 hover:bg-slate-800 cursor-pointer transition-all hover:border-slate-600 group"
                onClick={() => setSelectedModule(module.id)}
              >
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div>
                      <CardTitle className="text-lg">{module.title}</CardTitle>
                      <CardDescription>{module.description}</CardDescription>
                    </div>
                    <div
                      className={`w-12 h-12 rounded-lg bg-gradient-to-br ${module.color} flex items-center justify-center group-hover:scale-110 transition-transform`}
                    >
                      <Icon className="w-6 h-6 text-white" />
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <Button className="w-full bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white border-0">
                    {module.action}
                  </Button>
                </CardContent>
              </Card>
            )
          })}
        </div>
      </div>

      <div className="mb-8">
        <h3 className="text-2xl font-bold mb-6 flex items-center gap-2">
          <Wand2 className="w-6 h-6 text-purple-400" />
          X∆∞·ªüng T·∫°o ƒê·ªÅ
        </h3>
        <Card className="border-slate-700 bg-gradient-to-br from-purple-900/30 to-slate-800 overflow-hidden relative">
          <div className="absolute inset-0 opacity-5">
            <svg className="w-full h-full" viewBox="0 0 400 200">
              <circle cx="100" cy="100" r="50" fill="currentColor" />
              <circle cx="300" cy="100" r="50" fill="currentColor" />
            </svg>
          </div>
          <CardHeader className="relative z-10">
            <CardTitle className="text-2xl mb-2">üé® T·∫°o ƒê·ªÅ Thi Theo Y√™u C·∫ßu</CardTitle>
            <CardDescription className="text-slate-300">
              Mix c√°c c√¢u h·ªèi theo chuy√™n ƒë·ªÅ, ƒë·ªô kh√≥, v√† d·∫°ng b√†i c·ªßa b·∫°n. V√≠ d·ª•: 5 c√¢u Logarit + 7 c√¢u S√≥ng c∆° + 3 c√¢u
              H√¨nh h·ªçc kh√¥ng gian.
            </CardDescription>
          </CardHeader>
          <CardContent className="relative z-10">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
              <div className="bg-slate-800/50 rounded-lg p-4">
                <div className="text-sm text-slate-400 mb-2">Cho h·ªçc sinh</div>
                <div className="text-lg font-semibold text-cyan-400">Luy·ªán t·∫≠p chuy√™n s√¢u</div>
              </div>
              <div className="bg-slate-800/50 rounded-lg p-4">
                <div className="text-sm text-slate-400 mb-2">Cho gi√°o vi√™n</div>
                <div className="text-lg font-semibold text-cyan-400">T·∫°o ƒë·ªÅ ki·ªÉm tra</div>
              </div>
              <div className="bg-slate-800/50 rounded-lg p-4">
                <div className="text-sm text-slate-400 mb-2">T√≠nh nƒÉng</div>
                <div className="text-lg font-semibold text-cyan-400">AI t·ª± ƒë·ªông ch·∫•m</div>
              </div>
            </div>
            <Button className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white border-0">
              <Wand2 className="w-4 h-4 mr-2" />
              KH·ªûI ƒê·ªòNG X∆Ø·ªûNG T·∫†O ƒê·ªÄ
            </Button>
          </CardContent>
        </Card>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
        {/* Competency Radar Chart */}
        <Card className="lg:col-span-2 border-slate-700 bg-slate-800/50">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Target className="w-5 h-5 text-cyan-400" />
              B·∫£n ƒë·ªì NƒÉng l·ª±c To√°n h·ªçc
            </CardTitle>
            <CardDescription>S·ª± ph√¢n b·ªë ki·∫øn th·ª©c c·ªßa b·∫°n tr√™n c√°c chuy√™n ƒë·ªÅ</CardDescription>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <RadarChart data={competencyData}>
                <PolarGrid stroke="#334155" />
                <PolarAngleAxis dataKey="subject" stroke="#94a3b8" tick={{ fontSize: 12 }} />
                <PolarRadiusAxis stroke="#475569" />
                <Radar name="NƒÉng l·ª±c" dataKey="value" stroke="#06b6d4" fill="#06b6d4" fillOpacity={0.3} />
              </RadarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        {/* Stats Card */}
        <Card className="border-slate-700 bg-slate-800/50">
          <CardHeader>
            <CardTitle className="text-lg">Th·ªëng k√™ H√¥m nay</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <div className="flex justify-between items-center">
                <span className="text-slate-400">B√†i t·∫≠p ho√†n th√†nh</span>
                <span className="text-2xl font-bold text-cyan-400">12</span>
              </div>
              <div className="w-full bg-slate-700 rounded-full h-2">
                <div
                  className="bg-gradient-to-r from-blue-500 to-cyan-500 h-2 rounded-full"
                  style={{ width: "60%" }}
                ></div>
              </div>
            </div>
            <div className="space-y-2">
              <div className="flex justify-between items-center">
                <span className="text-slate-400">ƒê·ªô ch√≠nh x√°c</span>
                <span className="text-2xl font-bold text-green-400">87%</span>
              </div>
              <div className="w-full bg-slate-700 rounded-full h-2">
                <div
                  className="bg-gradient-to-r from-green-500 to-emerald-500 h-2 rounded-full"
                  style={{ width: "87%" }}
                ></div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Recent Topics */}
      <div>
        <h3 className="text-2xl font-bold mb-6">Chuy√™n ƒë·ªÅ G·∫ßn ƒë√¢y</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {[
            { name: "H√†m s·ªë m≈© v√† logarit", progress: 92, status: "Ho√†n th√†nh" },
            { name: "Ph∆∞∆°ng tr√¨nh logarit ch·ª©a tham s·ªë", progress: 68, status: "ƒêang h·ªçc" },
            { name: "T√≠ch ph√¢n t·ª´ng ph·∫ßn", progress: 45, status: "ƒêang h·ªçc" },
            { name: "S·ªë ph·ª©c - D·∫°ng l∆∞·ª£ng gi√°c", progress: 100, status: "Ho√†n th√†nh" },
          ].map((topic, idx) => (
            <Card key={idx} className="border-slate-700 bg-slate-800/50">
              <CardContent className="pt-6">
                <div className="flex justify-between items-start mb-3">
                  <h4 className="font-semibold">{topic.name}</h4>
                  <Badge
                    variant="outline"
                    className={
                      topic.status === "Ho√†n th√†nh"
                        ? "bg-green-500/20 text-green-300 border-green-500/30"
                        : "bg-blue-500/20 text-blue-300 border-blue-500/30"
                    }
                  >
                    {topic.status}
                  </Badge>
                </div>
                <div className="w-full bg-slate-700 rounded-full h-2">
                  <div
                    className="bg-gradient-to-r from-blue-500 to-cyan-500 h-2 rounded-full transition-all"
                    style={{ width: `${topic.progress}%` }}
                  ></div>
                </div>
                <div className="text-right text-sm text-slate-400 mt-2">{topic.progress}%</div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </div>
  )
}
